# NAV2 PARAM FILE - CUSTOMIZED FOR AMR PROJECT BY ADARSH YADAV
# Tuning adjusted for robot dimensions, environment, and actual performance.

amcl:
  ros__parameters:
    use_sim_time: false
    base_frame_id: "base_footprint"
    global_frame_id: "map"
    odom_frame_id: "odom"
    scan_topic: scan
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    min_particles: 500
    max_particles: 2000
    laser_model_type: "likelihood_field"
    laser_likelihood_max_dist: 2.0
    z_hit: 0.5
    z_short: 0.05
    z_max: 0.05
    z_rand: 0.5
    sigma_hit: 0.2
    lambda_short: 0.1
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    tf_broadcast: true
    transform_tolerance: 0.5
    recovery_alpha_slow: 0.0
    recovery_alpha_fast: 0.0
    update_min_d: 0.05
    update_min_a: 0.05
    resample_interval: 1
    save_pose_rate: 0.5

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    current_goal_checker: "goal_checker"
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.4
      movement_time_allowance: 20.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.3
      yaw_goal_tolerance: 0.3
      stateful: True

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      min_vel_x: 0.0   # minimum forward linear velocity
      max_vel_x: 0.26  # maximmum forward linear velocity
      max_vel_theta: 1.2
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      acc_lim_x: 1.5
      acc_lim_theta: 2.5
      decel_lim_x: -1.5
      decel_lim_theta: -2.5
      vx_samples: 20
      vtheta_samples: 20
      sim_time: 2.0
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "ObstacleFootprint", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      ObstacleFootprint.scale: 0.01
      GoalAlign.scale: 15.0
      GoalAlign.forward_point_distance: 0.1
      PathAlign.scale: 10.0
      PathAlign.forward_point_distance: 0.1
      PathDist.scale: 15.0
      GoalDist.scale: 10.0
      RotateToGoal.scale: 10.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 10.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: true

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    default_nav_through_poses_bt_xml: ""
    default_nav_to_pose_bt_xml: "/home/adarsh/amr_ws/src/amr_navigation/src/navigate_w_replanning_only_if_path_becomes_invalid_custom_file.xml" # i have used a custom .xml file here
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_rate_controller_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_navigate_to_pose_action_bt_node

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 20
    stop_on_failure: false

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: odom
      robot_base_frame: base_footprint
      update_frequency: 5.0
      publish_frequency: 2.0
      resolution: 0.05
      robot_radius: 0.20
      rolling_window: true
      width: 3
      height: 3
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          data_type: "LaserScan"
          marking: True
          clearing: True
          max_obstacle_height: 2.6
          raytrace_max_range: 4.0  # increase this to scan farther
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5  # increase this to scan obstacles from far away
          obstacle_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.8  # distance in (m) from which amr starts avoiding obstacle 

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: map
      robot_base_frame: base_footprint
      update_frequency: 1.0
      publish_frequency: 1.0
      resolution: 0.05
      robot_radius: 0.20
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          data_type: "LaserScan"
          marking: True
          clearing: True
          max_obstacle_height: 2.6
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.8  # distance in (m) from which amr starts avoiding obstacle 

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    autostart: true
    node_names:
      - controller_server
      - planner_server
      - bt_navigator
      - waypoint_follower
      - amcl
      - map_server
